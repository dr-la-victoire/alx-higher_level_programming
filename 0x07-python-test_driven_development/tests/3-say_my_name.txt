This text file contains the test cases for the 3-say_my_name module
===================================================================

Short Intro
===========
The 3-say_my_name module contains the function ``say_my_name``
which prints out the full name of an individual.
The function is defined as thus `say_my_name(first_name, last_name="")

Importing the function
======================
Importing the function from the module
::
	>>> say_my_name = __import__('3-say_my_name').say_my_name

Normal usage
============
It takes two strings. One for the first name and the other for the last name
::
	>>> say_my_name('John', 'Doe')
	My name is John Doe

If there is no string provided for the last name, it prints an empty string as default
::
	>>> say_my_name('Shane')
	My name is Shane 

Abnormal usuage
===============
Passing an integer to the first name
::
	>>> say_my_name(20, 'Doe')
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string

Passing an integer as the last name
::
	>>> say_my_name('Jacob', 50)
	Traceback (most recent call last):
		...
	TypeError: last_name must be a string

Passing a float to the first name
::
	>>> say_my_name(4.5, 'McMahon')
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string

Passing a float to the last name
::
	>>> say_my_name('Rhea', 61.9)
	Traceback (most recent call last):
		...
	TypeError: last_name must be a string
